[build-system]
requires = ["setuptools >= 42", "versioningit ~= 1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tropic-core"
description = "Core documents for TROPIC."
readme = "README.md"
keywords = ["polymerisation", "database"]
license = { text = "MIT" }
authors = [{ name = "Alex Ganose" }]
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.0.1",
]

[project.optional-dependencies]
strict = [
    "pydantic==2.6.2",
]

[project.urls]
homepage = "https://virtualatoms.github.io/tropic/"
repository = "https://github.com/virtualatoms/tropic"
documentation = "https://virtualatoms.github.io/tropic/"
changelog = "https://github.com/virtualatoms/tropic/blob/main/CHANGELOG.md"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true

[tool.pytest.ini_options]
addopts = "-p no:warnings --import-mode=importlib"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
include = ["src/*"]
parallel = true
branch = true

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    '^\s*@overload( |$)',
    '^\s*assert False(,|$)',
    'if typing.TYPE_CHECKING:',
]

[tool.ruff]
target-version = "py39"
lint.select = ["ALL"]
lint.ignore = [
    "ANN001",  # TODO: Remove later
    "ANN201",  # TODO: Remove later
    "D104",  # TODO: Remove later
    "D103",  # TODO: Remove later
    "D100",  # TODO: Remove later
    "D101",  # TODO: Remove later
    "ANN202",  # TODO: Remove later
    "E501",  # TODO: Remove later
    "D401",  # TODO: Remove later
    "D200",  # TODO: Remove later
    "E741",  # TODO: Remove later
    "RET504",  # TODO: Remove later
    "FA100", # TODO: Remove later
    "E722", # TODO: Remove later
    "TRY300", # TODO: Remove later
    "T201", # TODO: Remove later
    "SIM102", # TODO: Remove later
    "RUF015", # TODO: Remove later
    "B007", # TODO: Remove later
    "C414", # TODO: Remove later
    "C416", # TODO: Remove later
    "N806", # TODO: Remove later
    "PERF401", # TODO: Remove later
    "E712", # TODO: Remove later
    "C403", # TODO: Remove later
    "C419", # TODO: Remove later
    "C405", # TODO: Remove later
    "D400", # TODO: Remove later
    "ANN002",
    "ANN003",
    "ANN401",
    "ARG002",  # unused method argument
    "BLE001",
    "C408",    # Unnecessary (dict/list/tuple) call - remove call
    "C901",    # function too complex
    "COM812",  # trailing comma missing
    "DTZ",     # datetime-tz-now
    "EM",      # exception message must not use f-string literal
    "ERA001",  # found commented out code
    "FBT001",
    "FBT002",
    "FIX002",
    "G004",    # logging uses fstring
    "PD011",   # pandas-use-of-dot-values
    "PERF203", # try-except-in-loop
    "PLR",     # pylint-refactor
    "PT006",   # pytest-parametrize-names-wrong-type
    "PT013",   # pytest-incorrect-pytest-import
    "PTH",     # prefer Pathlib to os.path
    "RUF013",  # implicit-optional
    "S324",    # use of insecure hash function
    "SLF",     # private member accessed outside class
    "TD",      # TODOs
    "TRY003",  # long message outside exception class
    "S507",    # paramiko auto trust
]
lint.pydocstyle.convention = "numpy"
lint.isort.known-first-party = ["tropic"]
lint.isort.split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/tests/*" = ["ANN", "ARG001", "D", "INP001", "S101"]
"docs/*" = ["INP001"]
